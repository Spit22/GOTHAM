# Dockerfile Gotham Installation SERVER
FROM debian:jessie

# OS UPDATE
RUN apt-get -y update && apt-get -y dist-upgrade && apt-get -y autoremove && apt-get clean

#INSTALL DEPENDENCIES
RUN apt-get -y install curl git-all rsyslog apt-utils vim openssh-server

RUN echo "=== Preparing the gotham system... ==="

# Create GOTHAM user as an alias for the root account
RUN useradd -o -u 0 -g 0 -N -d /root/ -M gotham > /dev/null 2>&1

# Configure password
RUN mdp=$(tr -cd '[:alnum:]' < /dev/urandom | fold -w50 | head -n1)
RUN usermod -p "$mdp" gotham
RUN echo "[+] User gotham created with password : $mdp"

# Create the folder used by GOTHAM servers
RUN mkdir -p /data/tmp && \
    mkdir -p /data/rsyslog/rulebase && \
    mkdir -p /etc/rsyslog.d && \
    echo "[+] All paths created"

### INSTALL RSYSLOG ###
RUN echo "=== Configuring Rsyslog... ==="

# Pre-configure rsyslog
RUN touch /etc/rsyslog.d/00-JSON_template.conf
RUN echo '''\
    module(load="mmnormalize") \
    module(load="imfile") \
    template (name="LongTagForwardFormat" type="string" string="<%PRI%>%TIMESTAMP:::date-rfc3339% %HOSTNAME% %syslogtag%%msg:::sp-if-no-1st-sp%%msg%") \
    template(name="all-json-template" type="list"){ \
        property(name="$!all-json")}\
    template(name="default-template" type="list") { \
        constant(value="{") \
            constant(value="\"timestamp\":\"")     property(name="timereported" dateFormat="rfc3339") \
            constant(value="\",\"host\":\"")        property(name="hostname") \
            constant(value="\",\"severity\":\"")    property(name="syslogseverity-text") \
            constant(value="\",\"tag\":\"")   property(name="syslogtag" format="json") \
            constant(value="\",\"message\":\"")    property(name="msg" format="json") \
        constant(value="\"}") } \
    ''' > /etc/rsyslog.d/00-JSON_template.conf

# Restart rsyslog
#systemctl restart rsyslog
RUN echo "[+] Rsyslog configured"

### INSTALL AND CONFIGURE SSH SERVER ###
RUN echo "=== Installing and configuring SSH... ===" && \
    apt update > /dev/null 2>&1 && \
    echo "[+] APT updated"

# Harden SSH configuration
RUN echo """ openssh-server && \
    Port 22 && \
    ListenAddress 0.0.0.0 && \
    PermitRootLogin Yes && \
    PubkeyAuthentication yes && \
    """ > /etc/ssh/sshd_config

# Restart openssh
#service ssh restart
RUN echo "[+] SSH Server configured"

### GENERATE SSH KEY ###
RUN echo "=== Generating SSH Key... ==="

# Generate a rsa 4096 key pair without passphrase
RUN ssh-keygen -b 4096 -t rsa -f /root/gotham_key -N ""

# Copy the public key to authorized keys of root users
RUN mkdir -p /root/.ssh && \
    pubkey=$(cat /root/gotham_key.pub) && \
    echo $pubkey >> /root/.ssh/authorized_keys && \
    chmod -R 600 /root/.ssh

# Show base64 encoded private key user has to send to api
RUN echo -e "\n\n[+]Private key generated : \n" && \
    encode /root/gotham_key | tr -d "\n" && \
    echo ""


CMD ["/bin/bash"]